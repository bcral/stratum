{
    "doc": [
        "This test does",
        "Opens extended channel with the pool",
        "Checks that NewMiningJob and SetNewPrevHash is sent by the pool",
        "Generates code coverage report for the pool"
    ],
    "mining_messages": [
        {
            "message": {
                "type": "OpenExtendedMiningChannel",
                "request_id": 90,
                "user_identity": "",
                "nominal_hash_rate": 10,
                "max_target": [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                "min_extranonce_size": 3
            },
            "id": "open_extended_mining_channel"
        }
    ],
    "frame_builders": [
        {
            "type": "automatic",
            "message_id": "test/message-generator/messages/common_messages.json::setup_connection_flag_0"
        },
        {
            "type": "automatic",
            "message_id": "open_extended_mining_channel"
        }
    ],
    "actions": [
        {
            "message_ids": ["setup_connection_flag_0"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x01"
                }
            ],
            "actiondoc":  "This action sends a SetupConnection and checks that receives a message type 0x01, that is SetupConnectionSuccess"
        },
        {
            "message_ids": ["open_extended_mining_channel"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_field",
                    "value": [
                        "MiningProtocol",
                        "OpenExtendedMiningChannelSuccess",
                        [
                            [
                                "request_id",
                                {"U32": 90}
                            ]
                        ]
                    ]
                },
                {
                    "type": "match_message_field",
                    "value": [
                        "MiningProtocol",
                        "NewExtendedMiningJob",
                        [
                            [
                                "coinbase_tx_prefix",
                                {"Seq064k": [[45, 0], [2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 35, 1, 16, 0]]}
                            ],
                            [
                                "coinbase_tx_suffix",

                                {"Seq064k": [[43, 0], [255, 255, 255, 255, 1, 0, 242, 5, 42, 1, 0,
                                    0, 0, 25, 118, 169, 20, 178, 86, 8, 43, 147, 79, 231, 130, 173,
                                    186, 202, 175, 234, 223, 202, 100, 197, 42, 83, 132, 136, 172,
                                    0, 0, 0, 0]]}
                            ]
                        ]
                    ]
                },
                {
                    "type": "match_message_type",
                    "value": "0x20"
                } 
            ],
            "actiondoc":  "This action opens an ExtendedMiningChannel and checks that are received a .Success, SetNewPrevHash and NewExtendedMiningJob"
       }
    ],
    "setup_commands": [
        {
            "command": "cargo",
            "args": [
                        "run",
                        "../../test/message-generator/mock/template-provider-mock0.json"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Running `target/debug/message_generator_sv2 ../../test/message-generator/mock/template-provider-mock0.json`",
                            "output_location": "StdErr",
                            "condition": true
                        }
                    ],
                    "timer_secs": 240,
                    "warn_no_panic": false
                }
            }
        },
        {
             "command": "cargo",
             "args": [
                        "llvm-cov",
                        "--no-report",
                        "run",
                        "-p", 
                        "pool_sv2",
                        "--",
                        "-c",
                        "./test/config/pool-mock-tp.toml"
             ],
             "conditions": {
                 "WithConditions": {
                     "conditions": [
                         {
                             "output_string": "Listening for encrypted connection on: 127.0.0.1:34254",
                             "output_location": "StdOut",
                             "condition": true
                         }
                     ],
                     "timer_secs": 240,
                     "warn_no_panic": false
                 }
             }
         }
    ],
    "execution_commands": [
    ],
    "cleanup_commands": [
        {
            "command": "pkill",
            "args":  ["-f", "pool_sv2", "-SIGINT"],
            "conditions": "None"
        }
    ],
    "role": "client",
    "downstream": {
        "ip": "127.0.0.1",
        "port": 34254,
        "pub_key": "2di19GHYQnAZJmEpoUeP7C3Eg9TCcksHr23rZCC83dvUiZgiDL"
    }
}
