{
    "doc": [
        "This test do:",
            "1) launch bitcoind in regtest and wait for TP initialization",
            "2) create a bunch of block using bictoin-cli",
            "3) launch SRI pool and wait for initialization",
            "4) connect to the pool as a Downstream that use noise",
            "5) send SetupConnection to the pool",
            "6) check that SetupConnectionSuccess is received",
            "7) check that NewExtendedJob is received",
            "8) check that NewPrevHash is received",
            "9) send OpenStandardMiningChannel with request id 89",
            "10) check that OpenStandardMiningChannelSuccess with request 89 is received",
            "11) remove bitcoind data"
    ],
    "common_messages": [
        {
            "message": {
                "type": "SetupConnection",
                "protocol": "MiningProtocol",
                "min_version": 2,
                "max_version": 2,
                "flags": 0,
                "endpoint_host": "",
                "endpoint_port": 0,
                "vendor": "",
                "hardware_version": "",
                "firmware": "",
                "device_id": ""
            },
            "id": "setup_connection"
        },
        {
            "message": {
                "type": "SetupConnectionSuccess",
                "flags": 0,
                "used_version": 2
            },
            "id": "setup_connection_success"
        }
    ],
    "mining_messages": [
    ],
    "frame_builders": [
        {
            "type": "automatic",
            "message_id": "setup_connection_success"
        },
        {
            "type": "automatic",
            "message_id": "setup_connection"
        }
    ],
    "actions": [
        {
            "message_ids": ["setup_connection"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x01"
                },
                {
                    "type": "match_message_type",
                    "value": "0x1f"
                },
                {
                    "type": "match_message_type",
                    "value": "0x20"
                }
            ] 
        }
    ],
    "setup_commands": [
        {
            "command": "/home/brent/code/bitcoin_stuff/bitcoin/src/bitcoind",
            "args": ["--regtest"],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "sv2 thread start",
                            "output_location": "StdOut",
                            "condition": true
                        },
                        {
                            "output_string": "",
                            "output_location": "StdErr",
                            "condition": false
                        }
                    ],
                    "timer_secs": 10,
                    "warn_no_panic": false
                }
            }
        },
        {
            "command": "/home/brent/code/bitcoin_stuff/bitcoin/src/bitcoin-cli",
            "args": [
                        "--regtest",
                        "--datadir=./test/appdata/bitcoin_data/",
                        "generatetoaddress",
                        "16",
                        "bcrt1qttuwhmpa7a0ls5kr3ye6pjc24ng685jvdrksxx"
            ],
            "conditions": "None"
        },
        {
            "command": "cargo",
            "args": [
                        "run",
                        "-p",
                        "pool",
                        "--",
                        "-c",
                        "./roles/v2/pool/pool-config.toml"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Listening on 0.0.0.0:34254",
                            "output_location": "StdOut",
                            "condition": true
                        }
                    ],
                    "timer_secs": 10,
                    "warn_no_panic": false
                }
            }
        },
        {
            "command": "cargo",
            "args": [
                        "run",
                        "-p",
                        "translator",
                        "--",
                        "-c",
                        "./roles/translator/proxy-config.toml"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Up: Successfully Opened Extended Mining Channel",
                            "output_location": "StdOut",
                            "condition": true
                        }
                    ],
                    "timer_secs": 10,
                    "warn_no_panic": false
                }
            }
        }    
    ],
    "execution_commands": [
    ],
    "cleanup_commands": [
        {
            "command": "rm",
            "args": [ "-rf", "./test/appdata/bitcoin_data/regtest"],
            "conditions": "None"
        }
    ],
    "role": "client",
    "downstream": {
        "ip": "0.0.0.0",
        "port": 34255,
        "pub_key": "2di19GHYQnAZJmEpoUeP7C3Eg9TCcksHr23rZCC83dvUiZgiDL"
    }
}
